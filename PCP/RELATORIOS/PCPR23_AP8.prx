#INCLUDE "rwmake.ch"
#INCLUDE "Protheus.ch"   // Problema com a janela inicial
#include "ap5mail.ch"
#Include "TOPCONN.CH"
#Include "TBICONN.CH"

USER FUNCTION PCPR23()
Local N,M,i,p,m 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ DECLARACAO DE VARIAVEIS UTILIZADAS NO PROGRAMA ATRAVES DA FUNCAO    ³
//³ SETPRVT, QUE CRIARA SOMENTE AS VARIAVEIS DEFINIDAS PELO USUARIO,    ³
//³ IDENTIFICANDO AS VARIAVEIS PUBLICAS DO SISTEMA UTILIZADAS NO CODIGO ³
//³ INCLUIDO PELO ASSISTENTE DE CONVERSAO DO AP5 IDE                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SETPRVT("CBTXT,CBCONT,CABEC1,CABEC2,WNREL,TITULO")               
SETPRVT("CDESC1,CDESC2,CDESC3,TAMANHO,LIMITE,XSAIDA")
SETPRVT("AORD,LCONTINUA,CUM,LEND,ARETURN,NOMEPROG")
SETPRVT("NLASTKEY,CPERG,XCPI,GQUANT,GF_MPN,GF_MPI")
SETPRVT("XCOMP,XDATA,XDATFCH,XMES,XCOMPRA,XDATFIN")
SETPRVT("CDATINI,CDATFIN,XDATINI,XSALPED,CSTRING")
SETPRVT("XMRP,XCOMPRA,APDTS,XGERMES,dValIni,dValFin,xEmpresa") 

//  .----------------------------------.
// |  Declaracao de variaveis Privadas  |
//  '----------------------------------' 
Private aLinha  := {}
Private aExport := {}
		
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ PCPR23   ³ Autor ³ Remerson Mogi         ³ Data ³ 05/09/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri…o  ³ Producao mes a mes.                                        ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ PCPR24(void)                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Rmogi       ³08/11/07³XXXXXX³Adptacao das querys para todas empresas   ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/

/*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ DEFINE VARIAVEIS                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

titulo    := PADC("Lista de Importação Mes a Mes."                                   ,30)
cDesc1    := PADC("Este Programa tem como objetivo, emitir a relacao de despesas com",64)
cDesc2    := PADC("Importação, Mes a Mes. Conforme especificacoes em Parametros."    ,58)
cDesc3    := ""
TAMANHO   := "G"
LIMITE    := 220
CSTRING   := "SD3"
AORD      := {} //-- ORDEM
LCONTINUA := .T.
CUM       := ""
LEND      := .F.
ARETURN   := { "ZEBRADO", 1,"ADMINISTRACAO", 2, 2, 1, "",1 }
NOMEPROG  := "PCPR23"
NLASTKEY  := 0
CPERG     := "PCPR23"
CMES      := {}

AMSG      := {}
vLista    := {}
aCliente  := {}
xEmpresa  := SM0->M0_CODIGO  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VERIFICA AS PERGUNTAS SELECIONADAS                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

PERGUNTE(CPERG,.F.)

AADD(CMES,{"JAN","31","08"})
//calculo para bissexto
If   U_Bissexto()
	AADD(CMES,{"FEV","29","09"})
Else  
	AADD(CMES,{"FEV","28","09"})		
EndIf 	
AADD(CMES,{"MAR","31","10"})
AADD(CMES,{"ABR","30","11"})
AADD(CMES,{"MAI","31","12"})
AADD(CMES,{"JUN","30","01"})
AADD(CMES,{"JUL","31","02"})
AADD(CMES,{"AGO","31","03"})
AADD(CMES,{"SET","30","04"})
AADD(CMES,{"OUT","31","05"})
AADD(CMES,{"NOV","30","06"})
AADD(CMES,{"DEZ","31","07"})  

AMSGPROD:= {"QTD            ",;
            "CUSTO          "}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                        ³
//³ mv_par01             // Periodo Incial (mmaaaa)             ³
//³ mv_par02             // Periodo Final  (mmaaaa)             ³
//³ mv_par03             // Do Tipo                             ³
//³ mv_par04             // Ate o Tipo                          ³
//³ mv_par05             // Processo                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

WNREL := "PCPR23"
WNREL := SETPRINT(CSTRING,WNREL,CPERG,@TITULO,CDESC1,CDESC2,CDESC3,.F.,,)

IF NLASTKEY==27
	RETURN
ENDIF
#include "rwmake.ch"        // incluido pelo assistente de conversao do AP5 IDE em 07/03/02
#IFNDEF WINDOWS
	#DEFINE PSAY SAY
#ENDIF

SetDefault(aReturn,cString)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para Impressao do Cabecalho e Rodape  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cbtxt  := Space(10)
cbcont := 00
li     := 80
m_pag  := 01

cCabec  := ""

xQuant  := 0
cDiaIni := "01"
cMesIni := Val(subs(mv_par01,1,2))
cMesFin := Val(subs(mv_par02,1,2))

cAnoIni := Val(subs(mv_par01,3,4))
cDiaFin := cMes[cMesFin][02]
cAnoFin := Val(subs(mv_par02,3,4))

cDatIni := Ctod( cDiaIni+"/"+StrZero(cMesIni,2)+"/"+StrZero(cAnoIni,4) )
cDatFin := Ctod( cDiaFin+"/"+StrZero(cMesFin,2)+"/"+StrZero(cAnoFin,4) )

If cMesIni <= cMesFin .And. cAnoIni < cAnoFin
	MsgStop("Periodo Estipulado, Ultrapasa 12 meses...")
	Return
ElseIf cMesIni > cMesFin .And. cAnoIni >= cAnoFin
	MsgStop("Periodo Inicial maior que Periodo Final...")
	Return
ElseIf cMesIni > 12 .or. cMesFin > 12
	MsgStop("Mes Invalido...")
	Return
ElseIf (cMesIni == cMesFin .And. cAnoIni == cAnoFin) .or. (cAnoFin-cAnoIni==1 .and. cMesIni=12 .and. cMesFin=1 )
	xQuant := 1
ElseIf cMesIni < cMesFin .And. cAnoIni <= cAnoFin
	xQuant := cMesFin - cMesIni +1
ElseIf cMesIni > cMesFin .And. cAnoIni < cAnoFin
	xQuant := cMesFin - cMesIni +1
End

// --------------------------------------------
// Monta cabecalho para impressao de relatorio.
// --------------------------------------------
xCOL   := 040
xPOS   := {}
xMESES := {}
xIni := cDatIni
While xIni <= cDatFin
	If Ascan(xMESES,MONTH(xIni)) == 0
		aadd(xMESES,MONTH(xIni) )
		aadd(xPOS   ,xCOL )
		cCabec  := cCabec + cMes[MONTH(xIni)][1]+"/"+StrZero(year(xIni),4)+"     "
		xCOL := xCOL + 13
	Endif
	xIni := xIni + 1
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao dos cabecalhos                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

titulo := "Produção Mes à Mes. "
cabec1 := "Descricao                            " + cCabec //+"      Media   Valor Total"
cabec2 := "Entre: "+dtoc(cDatIni)+" a "+dtoc(cDatFin)
//         xxxxxxxxxxxxxxx  xxxxxxxxxxxxxxx  999,999,999  999.999.999  9.999.999 99.999.999
//         Ativo,Dispos.,Tela,Equip...          JAN/2006        JAN/2006
//         0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
//                   111111111122222222223333333333444444444455555555556666666666777777777788888888889999999999

If nLastKey == 27
	Return
Endif

nTipo  := IIF(aReturn[4]==1,15,18)

cabec(titulo,cabec1,cabec2,nomeprog,tamanho,nTipo)
 
vLista  := getProdMes()    // Retorna aProd

//Add Produtos         GRUPO + CODIGO        +TIPO 
//aSort( vLista ,,,{ |x,y| x[5]+subs(x[1],3,12)+x[6] < y[5]+subs(y[1],3,12)+y[6] } ) 
//xCli  :=Posicione("SA7",1,xFilial("SA7")+D3_COD,"A7_CLIENTE")         
aSort( vLista ,,,{ |x,y| x[7]+x[5]+subs(x[1],3,12) < y[7]+y[5]+subs(y[1],3,12) } )

//aSort( vLista ,,,{ |x,y| x[5]+subs(x[1],3,12) < y[5]+subs(y[1],3,12) } )
totProd:={}
for N:=1 to len(vLista)
	//IF subs(vLista[N][1],1,2)<>"RT" 	   RETIRADO PELA AGLAIR 05/12
	//Total das partes
	xAux:=""
	xProdDes:=Posicione("SB1",1,xFilial("SB1")+vLista[N][1],"B1_DESC")
	//msgstop(subs(vLista[N][5],1,3))
	DO CASE 
	   Case subs(xProdDes,1,6)$"PAINEL/*PAINE/**PAIN/" 
            xAux:="PAINEL"
	   Case subs(xProdDes,1,6)=="SENSOR"
	        xAux:="KSS"
	   OTHERWISE
	        xDesCli    :=Posicione("SA1",1,xFilial("SA1")+vLista[N][7],"A1_NOME")
	        xAux:="ASTEC" 
	        //msgbox(vLista[N][1])	      
	        //msgbox(vLista[N][7] + " - "+ xDesCli)	      
	END CASE      
           //Cliente + Classificação do Produto + Mes      
           codCli:=subs(vLista[N][7],1,3)           
           nPos := aScan(totProd ,{|X| X[1] == codCli .and. X[2]== xAux .and. X[3]== vLista[N][2] })   
	       
	       if nPos==0            //HONDA Codigo 001/002
	          AAdd(totProd,{      codCli,;    //[1] Cliente  
	                                xAux,;    //[2] Classificação do Produto
	                        vLista[N][2],;    //[3] Mes
	                        vLista[N][3],;    //[4] Qtd
	                        vLista[N][4]})    //[5] Custo       
	       else
	          totProd[nPos][4]+=vLista[N][3]
	          totProd[nPos][5]+=vLista[N][4]	       
	       end
	       nPos := aScan(aCliente ,{|X| X[1] == vLista[N][7] }) 
	       if nPos == 0 
	          AAdd(aCliente,{codCli})  	  
	       end
	//END RETIRADO PELA AGLAIR
	    //
	    
	nPos := aScan(AMSG ,{|X| X[1] == vLista[N][1] }) 
	if nPos == 0
	   AAdd(AMSG,{vLista[N][1]})  	  
	end
next 

aImp     := ARRAY(XQUANT,2)
xTotal   := Array(xQuant,2)
//Zerar vetores
for N:=1 to XQUANT
        aImp[N][1]:=0
        aImp[N][2]:=0
        xTotal[N][1]:=0
        xTotal[N][2]:=0   
next

for i:=1 to len(AMSG)
    xProd:=AMSG[i][1]
    
    for m:=1 to xQuant
        nMes := XMESES[m]        
        nPos := aScan(vLista ,{|X| X[1] == xProd .and. X[2]== nMes }) 
        aIMP[m][1]:=IIF(nPos<>0,vLista[nPos][3],0)
        aIMP[m][2]:=IIF(nPos<>0,vLista[nPos][4],0) 

    next

    xProdDes:=Posicione("SB1",1,xFilial("SB1")+xProd,"B1_DESC")

    @ LI,000       PSAY xProd +"  "+ xProdDes
    li++       

    xTotQuant := 0
    xTotCusto := 0

    For N:=1 to 2
	    For M:=1 to xQuant
		    If M==1
		       @ LI,017      PSAY AMSGPROD[N]
    	    EndIf                                                     
		    @ LI,PCOL()+IIF(N==1,2,1) PSAY IIF(N==1,Transform(aImp[M][N],"@E 999,999,999"),Transform(aImp[M][N],"@E 9,999,999.99")) 
	   
	        IIF (N==1,xTotQuant += aImp[M][N],xTotCusto += aImp[M][N]) 
	   
	        IIF (N==1,xTotal[m][n] += aImp[m][n],xTotal[m][n] += aImp[m][n]) 
	              //  xTotal[m][n] += aImp[m][n]
	    Next
 
        if N=1    
           @ LI,192 PSAY "Total Qtd:   "+ Transform (xTotQuant,"@E 999,999,999") 
           Li += 1
        else
           @ LI,192 PSAY "Total Custo:"+ Transform (xTotCusto,"@E 9,999,999.99")
           Li += 1
        endif
    Next
   	If Li > 65
		Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
		//LI++
	End
    //LI++  
    @ LI,000 PSAY Replicate("-",Limite)
	Li += 1
next
     
   For N:=1 to 2
	   For M:=1 to xQuant
		   If M==1
		      @ LI,011      PSAY "Total "+AMSGPROD[N]
	   	   EndIf                                                     
		   @ LI,PCOL()+IIF(N==1,2,1) PSAY IIF(N==1,Transform (xTotal[m][n],"@E 999,999,999"),Transform(xTotal[m][n],"@E 9,999,999.99"))
       Next
       Li += 1 
   Next
   
      
// Total detalhado para o CCusto 211 -Produção
IF mv_par05 == "1" .And. (mv_par03 == "PA" .or.mv_par04 == "RT")
   If Li > 65
      Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
   End         
   AMSGTOT := {"PAINEL            ",;
               "ASTEC             ",;
               "KSS               "}   
   xcli:=""      
   for i:=1 to len(aCliente)             
       if xcli # aCliente[i][1]
          Li += 1 
          xDesCli    :=Posicione("SA1",1,xFilial("SA1")+aCliente[i][1],"A1_NOME")
          @ LI,000 PSAY xDesCli
          li+=2                   
       end            
       xcli:=aCliente[i][1]
       

       for p:=1 to len(AMSGTOT)
           for m:=1 to xQuant
               nMes := XMESES[m]        
               nPos := aScan(totProd ,{|X| X[1] == xcli  .and. X[2]== alltrim(AMSGTOT[p]) .and. X[3]== nMes }) 
               aIMP[m][1]:=IIF(nPos<>0,totProd[nPos][4],0)
               aIMP[m][2]:=IIF(nPos<>0,totProd[nPos][5],0)
           next
           @ LI,000 PSAY AMSGTOT[p]
           
           xTotQuant:=0
           xTotCusto:=0              
           li++         
           For N:=1 to 2
	           For M:=1 to xQuant
		           If M==1		          
		              @ LI,017      PSAY AMSGPROD[N]
    	           EndIf                                                     
		           @ LI,PCOL()+IIF(N==1,2,1) PSAY IIF(N==1,Transform(aImp[M][N],"@E 999,999,999"),Transform(aImp[M][N],"@E 9,999,999.99")) 
	   
	               IIF (N==1,xTotQuant += aImp[M][N],xTotCusto += aImp[M][N]) 	    
	           Next
 
               if N=1    
                  @ LI,192 PSAY "Total Qtd:     "+ Transform (xTotQuant,"@E 999,999,999") 
                  Li += 1
               else   
                  @ LI,192 PSAY "Total Custo:"+ Transform (xTotCusto,"@E 999,999,999.99")
                  Li += 1
               endif 
               xTotQuant:=0
               xTotCusto:=0
           next
       Next
       If Li > 65
 	      Cabec(Titulo,Cabec1,Cabec2,NomeProg,Tamanho,nTipo)
       End         
       @ LI,000 PSAY Replicate("-",Limite)
       Li += 1
next 
END
//

   
IF li != 85
   roda(cbcont,cbtxt,tamanho)
EndIF

Set Device To Screen

dbSelectArea('SB1')
RetIndex('SB1')

If aReturn[5] == 1
   Set Printer to
   dbCommitAll()
   ourspool(wnrel)
Endif
MS_FLUSH()      
Return


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retorna os valores gastos com materiais mes a mes            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

Static Function getProdMes()
 
 aProd:={}
 IF     mv_par05 = "1"
 	Xcc:="'211'"
 ELSEIF mv_par05 = "2"
 	Xcc:="'221'"
 ELSEIF mv_par05 = "3"   
 	Xcc:="'231'"     
 ELSEIF mv_par05 = "4"
 	Xcc:="'241'"    
 ELSEIF mv_par05 = "5"
 	Xcc:="'251'" 	
 ELSEIF mv_par05 = "6"
 	Xcc:="'211','221','231','241','251'" 
 END
 
 cQuery := ""
 cQuery := " SELECT D3_COD, D3_RECURSO, MONTH(D3_EMISSAO) AS MES, SUM(D3_QUANT) AS QUANT, SUM(D3_CUSTO1) AS CUSTO"
 cQuery += " FROM SD3"+xEmpresa+"0 AS SD3 (NOLOCK)"   
 cQuery += " WHERE D3_TM ='400'" 
 cQuery += " AND D3_EMISSAO >= '"+ DTOS(cDatIni)+"'" 
 cQuery += " AND D3_EMISSAO <= '"+ DTOS(cDatFin)+"'"                 
 cQuery += " AND (D3_TIPO='"+ mv_par03 +"' OR D3_TIPO='"+mv_par04+"')" 
 cQuery += " AND D3_CC IN ("+ Xcc +")" 
 cQuery += " AND D3_ESTORNO <> 'S'" 
 cQuery += " AND D_E_L_E_T_ <> '*'"
 cQuery += " GROUP BY D3_COD, MONTH(D3_EMISSAO),D3_RECURSO" 
 
 cQuery := ChangeQuery(cQuery)

 TCQUERY cQuery Alias TD3 New      // Tabela de Funcionario Temporarios
 
 DbSElectArea("TD3") 
 DbGotop() 
 While !TD3->(Eof())
    xGrupo := Posicione("SB1",1,xFilial("SB1")+D3_COD,"B1_GRUPO")
    xTipo  := Posicione("SB1",1,xFilial("SB1")+D3_COD,"B1_TIPO" )
    xRT    := SUBS(D3_RECURSO,1,2) //Posicione("SC2",1,xFilial("SC2")+SUBS(D3_OP,1,6)+SUBS(D3_OP,7,2)+SUBS(D3_OP,9,3),"C2_TPOP" )
    
    xCli  :=Posicione("SA7",2,xFilial("SA7")+D3_COD,"A7_CLIENTE")
    if subs(xCli,1,3) $ "001/002/"
       xCli := "002"
    end
    
    If xRT # "RT"      
	   xCod:=D3_COD
	   nPos := aScan(aProd ,{|X| X[1] == xCod .and. X[2]== MES })
	Else
	   IF SUBS(D3_COD,1,2) $ "HP/YA"
	      xCod:="RT"+SUBS(D3_COD,3,13)
	   ELSE
	      xCod:="R"+SUBS(D3_COD,2,14)
	   END
	   nPos := aScan(aProd ,{|X| X[1] == xCod .and. X[2]== MES }) //nPos=0
	END 
	
    IF nPos == 0                
	AAdd(aProd,{  xCod,;    //[1]
	               MES,;    //[2]
	             QUANT,;    //[3]
	             CUSTO,;    //[4]
	            xGrupo,;    //[5]
	             xTipo,;    //[6]  
        subs(xCli,1,3)})    //[7]     
    ELSE
    aProd[nPos][3]+= QUANT
    aProd[nPos][4]+= CUSTO
    end          
    TD3->(DBSKIP())
    
 ENDDO 
 dbSelectArea("TD3")
 dbClearFil(NIL)
 dbCloseArea("TD3")
 dbCloseArea()
 Return aProd
/******************************************************/
User Function Bissexto()
Local lRet:=.F.
If  Year(DDataBase)/4 - Int( Year(DDataBase)/4 ) = 0 
	lRet:=.T.
EndIf 	
Return lRet

       
